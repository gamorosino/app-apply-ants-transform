#!/bin/bash
#PBS -l nodes=1:ppn=1,vmem=8g,walltime=0:10:00
#PBS -N app-apply-transform
#PBS -V

set -e

# === Load fields from config.json ===
warp=$(jq -r .warp config.json)
inverse_warp=$(jq -r '."inverse-warp"' config.json)
affine=$(jq -r .affine config.json)
input_t1w=$(jq -r .input_t1 config.json)
input_tractmasks=$(jq -r .input_tractmasks config.json)
interpolation=$(jq -r .interpolation config.json)
inverse=$(jq -r .inverse config.json)
affine_only=$(jq -r .affine_only config.json)
fsl_transform=$(jq -r .fsl_transform config.json)

# Optional anatomical fields
t1w=$(jq -r .t1 config.json)
t2w=$(jq -r .t2 config.json)
parc=$(jq -r .parc config.json)
mask=$(jq -r .mask config.json)
dwi=$(jq -r .dwi config.json)

# === Assign input image ===
if [ -n "$input_t1w" ] && [ "$input_t1w" != "null" ]; then
    input=$input_t1w
else
    echo "Error: No valid input found in config.json" >&2
    exit 1
fi

# === Assign first available anatomical reference ===
if [ -n "$t1w" ] && [ "$t1w" != "null" ]; then
    anat=$t1w
elif [ -n "$t2w" ] && [ "$t2w" != "null" ]; then
    anat=$t2w
elif [ -n "$parc" ] && [ "$parc" != "null" ]; then
    anat=$parc
elif [ -n "$mask" ] && [ "$mask" != "null" ]; then
    anat=$mask
elif [ -n "$dwi" ] && [ "$dwi" != "null" ]; then
    anat=$dwi
else
    echo "Error: No valid anatomical reference found in config.json" >&2
    exit 1
fi

[ "$interpolation" == "null" ] && interpolation="Linear"

# === Call separate script ===
./apply_transform.sh "$input" "$anat" "$warp" "$inverse_warp" "$affine" "$interpolation" "$inverse" "$affine_only" "$fsl_transform"
